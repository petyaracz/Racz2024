## Find variable patterns

Dimensions of interest

1. social salience ('eszek' more salient, 'menjél' less? salient)
2. phonological reactivity ('fürödni' synthetic variant, 'fürdeni' analytic variant)
3. productivity ('ágyikó' not productive, 'ágyacska' productive)
4. level "depth" (inflection/derivation)

Requirements

1. It actually shows variation w/ nonce words (this didn't seem to work with the imperative: everybody used -j in pilot study ('menj', 'aludj', 'rakodj' etc)). If variation has forms where it always or never happens that probably helps with this.
2. If the variation exists across multiple suffixes that's a plus (it's less boring that way for the participants).
3. Enough real stems that are involved (at least a couple dozen)
4. Frequency symmetry: both variants are equally likely (good luck with that).

For this we need a pattern that is obligatory / forbidden in some linguistic contexts.

Proposal said we compare 3+ variables across these dimensions. Instead, we pick three variables that stand in for the dimensions, for example:

a. socially salient variable: ik 1sg indef (descriptively unmarked variants are socially frowned upon)
b. phonological reactivity: ik cvc/cc (variation is between synthetic and analytic inflectional form)
c. ?? something that isn't kurva ikes ragozás? (eg. VH with noun postpositions)

cvc/cc

1. there are words that require or forbid it. 
2. across multiple suffixes.
3. 30-40 variable forms, zounds of stable forms.
4. not at all symmetrical, but both variants are viable ('áramlanak' and 'hangzanak' but 'tündökölnek' and 'véreznek').

1sg indef

1. some derivational suffixes really like -ik and subsequently might like indef -m (odik, lik, zik)
2. only 1sg indef, unless I want to go weird and involve 'egyék' and whatever
3. lots of ik verbs
4. both variants viable, maybe not within same speaker that much, but we need to check.

super high level derivation: atlan/talan ('házatlan,háztalan'), ke/cske ('lányka,lányocska')
nominal declension: ja/a ('ablaka,ablakja'), ban/ben/nak/nek/etc

Workflow

0. Figure out pattern #3.

1. Build longlist of target forms. Longlist includes forms that vary as well as forms that are targets but do not in fact vary. If that's not a thing, longlist includes forms that don't vary too much.
2. Build shortlist of target forms. Shortlist includes forms that are targets and that vary.
3. Calculate log odds information for shortlist.
4. Train ngram generator on shortlist. 
5. Generate a bunch of nonce words. Watch out for length.
6. Calculate category similarity for always and never forms in longlist (using Levenshtein GCM). See 1.
7. Evenly sample similarity space. Watch out for further considerations (word ending, for the most part, and word length?).